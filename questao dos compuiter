def gauss_seidel(max_iter=1000, limite=1e-6):
    x1, x2, x3, x4 = 0, 0, 0, 0

    for i in range(max_iter):
        x1_antigo, x2_antigo, x3_antigo, x4_antigo = x1, x2, x3, x4

        try:
            x1 = (504 - 4 * x2 - 7 * x3 - 20 * x4) / 3
            x2 = (1970 - 20 * x1 - 40 * x3 - 50 * x4) / 25
            x3 = (970 - 10 * x1 - 15 * x2 - 22 * x4) / 20
            x4 = (601 - 10 * x1 - 8 * x2 - 10 * x3) / 15
        except ZeroDivisionError:
            print("Erro de divisão por zero!")
            return None

        if (abs(x1 - x1_antigo) < limite and
            abs(x2 - x2_antigo) < limite and
            abs(x3 - x3_antigo) < limite and
            abs(x4 - x4_antigo) < limite):
            print(f"Convergência alcançada em {i+1} iterações")
            break
    else:
        print("Número máximo de iterações alcançado, pode não ter convergido")
        return None

    return x1, x2, x3, x4

x1, x2, x3, x4 = gauss_seidel()

if x1 is not None:
    print("Quantidade de computadores produzidos por dia:")
    print(f"Tipo 1: {x1:.2f}")
    print(f"Tipo 2: {x2:.2f}")
    print(f"Tipo 3: {x3:.2f}")
    print(f"Tipo 4: {x4:.2f}")

    x1_novo = x1 * 1.5
    x2_novo = x2 * 1.5
    x3_novo = x3 * 1.5
    x4_novo = x4 * 1.5

    mão_obra_nova = 3 * x1_novo + 4 * x2_novo + 7 * x3_novo + 20 * x4_novo
    metal_novo = 20 * x1_novo + 25 * x2_novo + 40 * x3_novo + 50 * x4_novo
    plastico_novo = 10 * x1_novo + 15 * x2_novo + 20 * x3_novo + 22 * x4_novo
    componentes_novo = 10 * x1_novo + 8 * x2_novo + 10 * x3_novo + 15 * x4_novo

    print("\nRequisitos de recursos para aumentar a produção em 50%:")
    print(f"Mão de obra: {mão_obra_nova:.2f} h/dia")
    print(f"Metal: {metal_novo:.2f} kg/dia")
    print(f"Plástico: {plastico_novo:.2f} kg/dia")
    print(f"Componentes: {componentes_novo:.2f} kg/dia")
